;;
;; Header files for ArbBotIntegration
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $SetAccount$_load
(slice, ((slice, int, int))) $SetAccount$_load(slice sc_0) inline;

;; $ArbBotIntegration$_store
builder $ArbBotIntegration$_store(builder build_0, (slice, slice, int, int, int) v) inline;

;; $ArbBotIntegration$_load
(slice, ((slice, slice, int, int, int))) $ArbBotIntegration$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $AccountState$_to_external
(slice, int, int) $AccountState$_to_external(((slice, int, int)) v) inline;

;; $ArbBotIntegration$init$_load
(slice, ((slice, int))) $ArbBotIntegration$init$_load(slice sc_0) inline;

;; $ArbBotIntegration$_contract_init
(slice, slice, int, int, int) $ArbBotIntegration$_contract_init(slice $owner, int $id) impure inline_ref;

;; $ArbBotIntegration$_contract_load
(slice, slice, int, int, int) $ArbBotIntegration$_contract_load() impure inline_ref;

;; $ArbBotIntegration$_contract_store
() $ArbBotIntegration$_contract_store((slice, slice, int, int, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $AccountState$_constructor_user_stTONAmount_usdtAmount
((slice, int, int)) $AccountState$_constructor_user_stTONAmount_usdtAmount(slice user, int stTONAmount, int usdtAmount) inline;

;; $ArbBotIntegration$_fun_state
((slice, slice, int, int, int), (slice, int, int)) $ArbBotIntegration$_fun_state((slice, slice, int, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $ArbBotIntegration$_fun_forward
((slice, slice, int, int, int), ()) $ArbBotIntegration$_fun_forward((slice, slice, int, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $ArbBotIntegration$_fun_notify
((slice, slice, int, int, int), ()) $ArbBotIntegration$_fun_notify((slice, slice, int, int, int) $self, cell $body) impure inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
